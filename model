import openai
import pandas as pd
openai.api_key="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"

def chat_with_gpt(prompt):
    response=openai.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role":"user", "content":prompt}]
    )

    return response.choices[0].message.content.strip()


txt_file_path = "D:\AU internship\data.txt"  # Replace with the path to your text file

# Open the text file and read lines
with open(txt_file_path, 'r') as file:
    lines = file.readlines()

# # Iterate through each line in the file
# for index, line in enumerate(lines):

if __name__== "__main__":
    while True:
        # user_input=input("You: ")
        # if user_input.lower() in ["quit","exit","bye"]:
        #     break
        for index, line in enumerate(lines):
            response=chat_with_gpt(f"""give me a job description for the role of {line}  . The output should be formatted with the following specifications the column consisting headings in the following :
                                   job_title, job_description, responsibilities_001, responsibilities002, responsibilities003, responsibilities004, qualifications001, qualifications002, qualifications003, qualifications004, programming_skills001, programming_skills002 and the corresponding rows such consist of content related tojob_title, job_description, responsibilities001, responsibilities002, responsibilities003, responsibilities004, qualifications_001, 
                                   qualifications_002, qualifications003, qualifications004, programming_skills001, programming_skills_002 """)
            # response=chat_with_gpt(user_input)
            print("Chatbot: ", response)
            data = {'job_title': ['Web Developer']}
            sections = [section.strip() for section in response.split('\n\n') if section.strip()]

            for section in sections:
                lines = section.split('\n')
                header = lines[0].strip(':')
                data[header] = lines[1:]
            # Find the maximum length among all arrays
            max_length = max(len(data[key]) for key in data.keys())

            # Ensure all arrays have the same length by filling with empty strings
            for key in data.keys():
                data[key] += [''] * (max_length - len(data[key]))
            # Create a DataFrame
            df = pd.DataFrame(data)

            # Save to Excel file
            output_excel_path = 'output_data.xlsx'
            df.to_excel(output_excel_path, index=False)

            print(f"Data saved to {output_excel_path}")